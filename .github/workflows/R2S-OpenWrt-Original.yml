name: R2S-OpenWrt-Original

on:
  workflow_dispatch:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/R2S-OpenWrt-Original.yml'
      - 'SCRIPTS/**'
      - 'SEED/**'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Clone Repository
      uses: actions/checkout@main

    - name: Generate Tag & Release Name
      id: generate_name
      env:
        TZ: Asia/Shanghai
      run: |
        time=$(date +%Y%m%d%H%M)
        release_tag="original-$time"
        release_name="R2S-OpenWrt-Original-$time"
        echo "##[set-output name=release_name;]$release_name"
        echo "##[set-output name=release_tag;]$release_tag"

    - name: Show CPU Info
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        git clone https://github.com/eembc/coremark.git
        cd coremark && make > '/dev/null' && ./coremark.exe

    - name: Init Build Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
        wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash

    - name: Free Disk Space
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Clone Nick's Repo & Replace Files
      run: |
        git clone https://github.com/nicksun98/R2S-OpenWrt.git
        mv ./R2S-OpenWrt/SCRIPTS/* ./SCRIPTS/
        mv ./SCRIPTS/R2S/* ./SCRIPTS/
        mv ./SCRIPTS/original/* ./SCRIPTS/
        mv ./R2S-OpenWrt/PATCH/* ./PATCH/
        rm -rf ./R2S-OpenWrt

    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner ${GITHUB_WORKSPACE}
        cp -r ./SCRIPTS/* ./
        /bin/bash 01_get_ready.sh

    - name: Prepare Package
      run: |
        cd ./openwrt
        cp -r ../SCRIPTS/* ./
        /bin/bash my_prepare_package.sh

    - name: Convert Translation
      run: |
        cd ./openwrt
        /bin/bash 03_convert_translation.sh

    - name: Remove Upx
      run: |
        cd ./openwrt
        /bin/bash 04_remove_upx.sh

    - name: Add ACL
      run: |
        cd ./openwrt
        /bin/bash 05_create_acl_for_luci.sh -a

    - name: Make Config
      run: |
        cd ./openwrt
        mv ../SEED/config-original.seed .config
        make defconfig
        chmod -R 755 ./

    - name: Make Download
      run: |
        cd ./openwrt
        make download -j10

    - name: Make Toolchain
      run: |
        cd ./openwrt
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=s

    - name: Compile Openwrt
      run: |
        cd ./openwrt
        let make_process=$(nproc)+1
        make -j${make_process} V=s || make -j${make_process} V=s || make -j1 V=s

    - name: Cleaning
      run: |
        mkdir ./artifacts/
        cd ./openwrt/bin/targets/rockchip/armv8
        gzip -d *.gz && exit 0
        gzip *.img
        rm -rf ./packages/
        mv * ../../../../../artifacts/

    - name: Upload Artifact
      uses: actions/upload-artifact@main
      with:
        name: ${{ steps.generate_name.outputs.release_name }}
        path: ./artifacts/*
    
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ./artifacts/*
        name: ${{ steps.generate_name.outputs.release_name }}
        tag: ${{ steps.generate_name.outputs.release_tag }}
        token: ${{ secrets.GITHUB_TOKEN }}
